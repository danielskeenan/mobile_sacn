export const APP_NAME = "Mobile sACN";
export const SACN_UNIV_MIN = 1;
export const SACN_UNIV_MAX = 63999;
export const SACN_UNIV_DEFAULT = 1;
export const DMX_MIN = 1;
export const DMX_MAX = 512;
export const DMX_DEFAULT = 1;
export const SACN_PRI_MIN = 0;
export const SACN_PRI_MAX = 200;
export const SACN_PRI_DEFAULT = 100;
export const LEVEL_MIN = 0;
export const LEVEL_MAX = 255;
export const FX_DURATION_MIN = 100;
export const FX_DURATION_MAX = 10000;

/**
 * Lookup table for mapping DMX values to percentages.
 *
 * Use a lookup table for this because it means we can make sure 0 and 100
 * always mean 0 and 100, not a rounded value nearby.
 *
 * @todo Create a test to ensure that LEVEL_PERCENT_TABLE and PERCENT_LEVEL_TABLE are in sync.
 */
export const LEVEL_PERCENT_TABLE = new Map([
    [0, 0],
    [1, 1],
    [2, 1],
    [3, 1],
    [4, 2],
    [5, 2],
    [6, 2],
    [7, 3],
    [8, 3],
    [9, 4],
    [10, 4],
    [11, 4],
    [12, 5],
    [13, 5],
    [14, 5],
    [15, 6],
    [16, 6],
    [17, 7],
    [18, 7],
    [19, 7],
    [20, 8],
    [21, 8],
    [22, 9],
    [23, 9],
    [24, 9],
    [25, 10],
    [26, 10],
    [27, 11],
    [28, 11],
    [29, 11],
    [30, 12],
    [31, 12],
    [32, 13],
    [33, 13],
    [34, 13],
    [35, 14],
    [36, 14],
    [37, 15],
    [38, 15],
    [39, 15],
    [40, 16],
    [41, 16],
    [42, 16],
    [43, 17],
    [44, 17],
    [45, 18],
    [46, 18],
    [47, 18],
    [48, 19],
    [49, 19],
    [50, 20],
    [51, 20],
    [52, 20],
    [53, 21],
    [54, 21],
    [55, 22],
    [56, 22],
    [57, 22],
    [58, 23],
    [59, 23],
    [60, 24],
    [61, 24],
    [62, 24],
    [63, 25],
    [64, 25],
    [65, 25],
    [66, 26],
    [67, 26],
    [68, 27],
    [69, 27],
    [70, 27],
    [71, 28],
    [72, 28],
    [73, 29],
    [74, 29],
    [75, 29],
    [76, 30],
    [77, 30],
    [78, 31],
    [79, 31],
    [80, 31],
    [81, 32],
    [82, 32],
    [83, 33],
    [84, 33],
    [85, 33],
    [86, 34],
    [87, 34],
    [88, 35],
    [89, 35],
    [90, 35],
    [91, 36],
    [92, 36],
    [93, 36],
    [94, 37],
    [95, 37],
    [96, 38],
    [97, 38],
    [98, 38],
    [99, 39],
    [100, 39],
    [101, 40],
    [102, 40],
    [103, 40],
    [104, 41],
    [105, 41],
    [106, 42],
    [107, 42],
    [108, 42],
    [109, 43],
    [110, 43],
    [111, 44],
    [112, 44],
    [113, 44],
    [114, 45],
    [115, 45],
    [116, 45],
    [117, 46],
    [118, 46],
    [119, 47],
    [120, 47],
    [121, 47],
    [122, 48],
    [123, 48],
    [124, 49],
    [125, 49],
    [126, 49],
    [127, 50],
    [128, 50],
    [129, 51],
    [130, 51],
    [131, 51],
    [132, 52],
    [133, 52],
    [134, 53],
    [135, 53],
    [136, 53],
    [137, 54],
    [138, 54],
    [139, 55],
    [140, 55],
    [141, 55],
    [142, 56],
    [143, 56],
    [144, 56],
    [145, 57],
    [146, 57],
    [147, 58],
    [148, 58],
    [149, 58],
    [150, 59],
    [151, 59],
    [152, 60],
    [153, 60],
    [154, 60],
    [155, 61],
    [156, 61],
    [157, 62],
    [158, 62],
    [159, 62],
    [160, 63],
    [161, 63],
    [162, 64],
    [163, 64],
    [164, 64],
    [165, 65],
    [166, 65],
    [167, 65],
    [168, 66],
    [169, 66],
    [170, 67],
    [171, 67],
    [172, 67],
    [173, 68],
    [174, 68],
    [175, 69],
    [176, 69],
    [177, 69],
    [178, 70],
    [179, 70],
    [180, 71],
    [181, 71],
    [182, 71],
    [183, 72],
    [184, 72],
    [185, 73],
    [186, 73],
    [187, 73],
    [188, 74],
    [189, 74],
    [190, 75],
    [191, 75],
    [192, 75],
    [193, 76],
    [194, 76],
    [195, 76],
    [196, 77],
    [197, 77],
    [198, 78],
    [199, 78],
    [200, 78],
    [201, 79],
    [202, 79],
    [203, 80],
    [204, 80],
    [205, 80],
    [206, 81],
    [207, 81],
    [208, 82],
    [209, 82],
    [210, 82],
    [211, 83],
    [212, 83],
    [213, 84],
    [214, 84],
    [215, 84],
    [216, 85],
    [217, 85],
    [218, 85],
    [219, 86],
    [220, 86],
    [221, 87],
    [222, 87],
    [223, 87],
    [224, 88],
    [225, 88],
    [226, 89],
    [227, 89],
    [228, 89],
    [229, 90],
    [230, 90],
    [231, 91],
    [232, 91],
    [233, 91],
    [234, 92],
    [235, 92],
    [236, 93],
    [237, 93],
    [238, 93],
    [239, 94],
    [240, 94],
    [241, 95],
    [242, 95],
    [243, 95],
    [244, 96],
    [245, 96],
    [246, 96],
    [247, 97],
    [248, 97],
    [249, 98],
    [250, 98],
    [251, 98],
    [252, 99],
    [253, 99],
    [254, 99],
    [255, 100],
]);

/**
 * Lookup table for mapping percentages to DMX values.
 */
export const PERCENT_LEVEL_TABLE = new Map([
    [0, 0],
    [1, 3],
    [2, 5],
    [3, 8],
    [4, 10],
    [5, 13],
    [6, 15],
    [7, 18],
    [8, 20],
    [9, 23],
    [10, 26],
    [11, 28],
    [12, 31],
    [13, 33],
    [14, 36],
    [15, 38],
    [16, 41],
    [17, 43],
    [18, 46],
    [19, 48],
    [20, 51],
    [21, 54],
    [22, 56],
    [23, 59],
    [24, 61],
    [25, 64],
    [26, 66],
    [27, 69],
    [28, 71],
    [29, 74],
    [30, 77],
    [31, 79],
    [32, 82],
    [33, 84],
    [34, 87],
    [35, 89],
    [36, 92],
    [37, 94],
    [38, 97],
    [39, 99],
    [40, 102],
    [41, 105],
    [42, 107],
    [43, 110],
    [44, 112],
    [45, 115],
    [46, 117],
    [47, 120],
    [48, 122],
    [49, 125],
    [50, 128],
    [51, 130],
    [52, 133],
    [53, 135],
    [54, 138],
    [55, 140],
    [56, 143],
    [57, 145],
    [58, 148],
    [59, 150],
    [60, 153],
    [61, 156],
    [62, 158],
    [63, 161],
    [64, 163],
    [65, 166],
    [66, 168],
    [67, 171],
    [68, 173],
    [69, 176],
    [70, 179],
    [71, 181],
    [72, 184],
    [73, 186],
    [74, 189],
    [75, 191],
    [76, 194],
    [77, 196],
    [78, 199],
    [79, 201],
    [80, 204],
    [81, 207],
    [82, 209],
    [83, 212],
    [84, 214],
    [85, 217],
    [86, 219],
    [87, 222],
    [88, 224],
    [89, 227],
    [90, 230],
    [91, 232],
    [92, 235],
    [93, 237],
    [94, 240],
    [95, 242],
    [96, 245],
    [97, 247],
    [98, 250],
    [99, 252],
    [100, 255],
]);

export function clampLevelValue(level: number): number {
    if (level < LEVEL_MIN) {
        return LEVEL_MIN;
    } else if (level > LEVEL_MAX) {
        return LEVEL_MAX;
    }
    return level;
}
