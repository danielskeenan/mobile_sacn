export enum LevelDisplayMode {
    DECIMAL = "decimal",
    HEX = "hex",
    PERCENT = "percent",
}

/**
 * Lookup table for mapping DMX values to percentages.
 *
 * Use a lookup table for this because it means we can make sure 0 and 100
 * always mean 0 and 100, not a rounded value nearby.
 *
 * @todo Create a test to ensure that LEVEL_PERCENT_TABLE and PERCENT_LEVEL_TABLE are in sync.
 */
export const LEVEL_PERCENT_TABLE = [
    0, // 0
    1, // 1
    1, // 2
    1, // 3
    2, // 4
    2, // 5
    2, // 6
    3, // 7
    3, // 8
    4, // 9
    4, // 10
    4, // 11
    5, // 12
    5, // 13
    5, // 14
    6, // 15
    6, // 16
    7, // 17
    7, // 18
    7, // 19
    8, // 20
    8, // 21
    9, // 22
    9, // 23
    9, // 24
    10, // 25
    10, // 26
    11, // 27
    11, // 28
    11, // 29
    12, // 30
    12, // 31
    13, // 32
    13, // 33
    13, // 34
    14, // 35
    14, // 36
    15, // 37
    15, // 38
    15, // 39
    16, // 40
    16, // 41
    16, // 42
    17, // 43
    17, // 44
    18, // 45
    18, // 46
    18, // 47
    19, // 48
    19, // 49
    20, // 50
    20, // 51
    20, // 52
    21, // 53
    21, // 54
    22, // 55
    22, // 56
    22, // 57
    23, // 58
    23, // 59
    24, // 60
    24, // 61
    24, // 62
    25, // 63
    25, // 64
    25, // 65
    26, // 66
    26, // 67
    27, // 68
    27, // 69
    27, // 70
    28, // 71
    28, // 72
    29, // 73
    29, // 74
    29, // 75
    30, // 76
    30, // 77
    31, // 78
    31, // 79
    31, // 80
    32, // 81
    32, // 82
    33, // 83
    33, // 84
    33, // 85
    34, // 86
    34, // 87
    35, // 88
    35, // 89
    35, // 90
    36, // 91
    36, // 92
    36, // 93
    37, // 94
    37, // 95
    38, // 96
    38, // 97
    38, // 98
    39, // 99
    39, // 100
    40, // 101
    40, // 102
    40, // 103
    41, // 104
    41, // 105
    42, // 106
    42, // 107
    42, // 108
    43, // 109
    43, // 110
    44, // 111
    44, // 112
    44, // 113
    45, // 114
    45, // 115
    45, // 116
    46, // 117
    46, // 118
    47, // 119
    47, // 120
    47, // 121
    48, // 122
    48, // 123
    49, // 124
    49, // 125
    49, // 126
    50, // 127
    50, // 128
    51, // 129
    51, // 130
    51, // 131
    52, // 132
    52, // 133
    53, // 134
    53, // 135
    53, // 136
    54, // 137
    54, // 138
    55, // 139
    55, // 140
    55, // 141
    56, // 142
    56, // 143
    56, // 144
    57, // 145
    57, // 146
    58, // 147
    58, // 148
    58, // 149
    59, // 150
    59, // 151
    60, // 152
    60, // 153
    60, // 154
    61, // 155
    61, // 156
    62, // 157
    62, // 158
    62, // 159
    63, // 160
    63, // 161
    64, // 162
    64, // 163
    64, // 164
    65, // 165
    65, // 166
    65, // 167
    66, // 168
    66, // 169
    67, // 170
    67, // 171
    67, // 172
    68, // 173
    68, // 174
    69, // 175
    69, // 176
    69, // 177
    70, // 178
    70, // 179
    71, // 180
    71, // 181
    71, // 182
    72, // 183
    72, // 184
    73, // 185
    73, // 186
    73, // 187
    74, // 188
    74, // 189
    75, // 190
    75, // 191
    75, // 192
    76, // 193
    76, // 194
    76, // 195
    77, // 196
    77, // 197
    78, // 198
    78, // 199
    78, // 200
    79, // 201
    79, // 202
    80, // 203
    80, // 204
    80, // 205
    81, // 206
    81, // 207
    82, // 208
    82, // 209
    82, // 210
    83, // 211
    83, // 212
    84, // 213
    84, // 214
    84, // 215
    85, // 216
    85, // 217
    85, // 218
    86, // 219
    86, // 220
    87, // 221
    87, // 222
    87, // 223
    88, // 224
    88, // 225
    89, // 226
    89, // 227
    89, // 228
    90, // 229
    90, // 230
    91, // 231
    91, // 232
    91, // 233
    92, // 234
    92, // 235
    93, // 236
    93, // 237
    93, // 238
    94, // 239
    94, // 240
    95, // 241
    95, // 242
    95, // 243
    96, // 244
    96, // 245
    96, // 246
    97, // 247
    97, // 248
    98, // 249
    98, // 250
    98, // 251
    99, // 252
    99, // 253
    99, // 254
    100, // 255
];

/**
 * Same as LEVEL_PERCENT_LOOKUP_TABLE, but with strings. 100% is stored as "FL" so
 * all strings are two characters long.
 */
export const LEVEL_PERCENT_STR_LOOKUP_TABLE = (() => {
    const table = LEVEL_PERCENT_TABLE.map(level => level.toString().padStart(2, "0"));
    table[255] = "FL";
    return table;
})();

/**
 * Lookup table for mapping percentages to DMX values.
 */
export const PERCENT_LEVEL_TABLE = [
    0, // 0
    3, // 1
    5, // 2
    8, // 3
    10, // 4
    13, // 5
    15, // 6
    18, // 7
    20, // 8
    23, // 9
    26, // 10
    28, // 11
    31, // 12
    33, // 13
    36, // 14
    38, // 15
    41, // 16
    43, // 17
    46, // 18
    48, // 19
    51, // 20
    54, // 21
    56, // 22
    59, // 23
    61, // 24
    64, // 25
    66, // 26
    69, // 27
    71, // 28
    74, // 29
    77, // 30
    79, // 31
    82, // 32
    84, // 33
    87, // 34
    89, // 35
    92, // 36
    94, // 37
    97, // 38
    99, // 39
    102, // 40
    105, // 41
    107, // 42
    110, // 43
    112, // 44
    115, // 45
    117, // 46
    120, // 47
    122, // 48
    125, // 49
    128, // 50
    130, // 51
    133, // 52
    135, // 53
    138, // 54
    140, // 55
    143, // 56
    145, // 57
    148, // 58
    150, // 59
    153, // 60
    156, // 61
    158, // 62
    161, // 63
    163, // 64
    166, // 65
    168, // 66
    171, // 67
    173, // 68
    176, // 69
    179, // 70
    181, // 71
    184, // 72
    186, // 73
    189, // 74
    191, // 75
    194, // 76
    196, // 77
    199, // 78
    201, // 79
    204, // 80
    207, // 81
    209, // 82
    212, // 83
    214, // 84
    217, // 85
    219, // 86
    222, // 87
    224, // 88
    227, // 89
    230, // 90
    232, // 91
    235, // 92
    237, // 93
    240, // 94
    242, // 95
    245, // 96
    247, // 97
    250, // 98
    252, // 99
    255, // 100
];

export function levelDisplayString(level: number, displayMode?: LevelDisplayMode) {
    if (level === undefined) {
        return "";
    }
    switch (displayMode) {
        case LevelDisplayMode.DECIMAL:
            return level.toString(10).padStart(3, "0");
        case LevelDisplayMode.HEX:
            return level.toString(16).toUpperCase().padStart(2, "0");
        case LevelDisplayMode.PERCENT:
            const percent = LEVEL_PERCENT_STR_LOOKUP_TABLE[level] ?? "??";
            return `${percent}%`;
    }
    return "??";
}
